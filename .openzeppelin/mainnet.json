{
  "manifestVersion": "3.1",
  "impls": {
    "83636b0e8cf20d72cd53e169cc1eb71ac14474dd950f0d09063738c862d529f8": {
      "address": "0x5aeEb31CF3dd740fb6CFa7e8C2AF6DAF2c3F7CeE",
      "txHash": "0xde87ef5f32352780674496d1d9b0bf0e0fb43ccce2bd7086f75975f8472e2252",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "Ownable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol:17"
          },
          {
            "contract": "Ownable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol:80"
          },
          {
            "contract": "RariFundManager",
            "label": "fundDisabled",
            "type": "t_bool",
            "src": "RariFundManager.sol:42"
          },
          {
            "contract": "RariFundManager",
            "label": "_rariFundControllerContract",
            "type": "t_address_payable",
            "src": "RariFundManager.sol:47"
          },
          {
            "contract": "RariFundManager",
            "label": "rariFundController",
            "type": "t_contract(RariFundController)2089",
            "src": "RariFundManager.sol:52"
          },
          {
            "contract": "RariFundManager",
            "label": "_rariFundTokenContract",
            "type": "t_address",
            "src": "RariFundManager.sol:57"
          },
          {
            "contract": "RariFundManager",
            "label": "rariFundToken",
            "type": "t_contract(RariFundToken)7017",
            "src": "RariFundManager.sol:62"
          },
          {
            "contract": "RariFundManager",
            "label": "rariFundPriceConsumer",
            "type": "t_contract(RariFundPriceConsumer)4949",
            "src": "RariFundManager.sol:67"
          },
          {
            "contract": "RariFundManager",
            "label": "_rariFundProxyContract",
            "type": "t_address",
            "src": "RariFundManager.sol:72"
          },
          {
            "contract": "RariFundManager",
            "label": "_rariFundRebalancerAddress",
            "type": "t_address",
            "src": "RariFundManager.sol:77"
          },
          {
            "contract": "RariFundManager",
            "label": "_supportedCurrencies",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "RariFundManager.sol:82"
          },
          {
            "contract": "RariFundManager",
            "label": "_currencyIndexes",
            "type": "t_mapping(t_string_memory,t_uint8)",
            "src": "RariFundManager.sol:87"
          },
          {
            "contract": "RariFundManager",
            "label": "_currencyDecimals",
            "type": "t_mapping(t_string_memory,t_uint256)",
            "src": "RariFundManager.sol:92"
          },
          {
            "contract": "RariFundManager",
            "label": "_erc20Contracts",
            "type": "t_mapping(t_string_memory,t_address)",
            "src": "RariFundManager.sol:97"
          },
          {
            "contract": "RariFundManager",
            "label": "_poolsByCurrency",
            "type": "t_mapping(t_string_memory,t_array(t_enum(LiquidityPool)116)dyn_storage)",
            "src": "RariFundManager.sol:102"
          },
          {
            "contract": "RariFundManager",
            "label": "_authorizedFundManagerDataSource",
            "type": "t_address",
            "src": "RariFundManager.sol:199"
          },
          {
            "contract": "RariFundManager",
            "label": "_cachePoolBalances",
            "type": "t_bool",
            "src": "RariFundManager.sol:366"
          },
          {
            "contract": "RariFundManager",
            "label": "_cacheDydxBalances",
            "type": "t_bool",
            "src": "RariFundManager.sol:371"
          },
          {
            "contract": "RariFundManager",
            "label": "_poolBalanceCache",
            "type": "t_mapping(t_string_memory,t_mapping(t_uint8,t_uint256))",
            "src": "RariFundManager.sol:376"
          },
          {
            "contract": "RariFundManager",
            "label": "_dydxTokenAddressesCache",
            "type": "t_array(t_address)dyn_storage",
            "src": "RariFundManager.sol:381"
          },
          {
            "contract": "RariFundManager",
            "label": "_dydxBalancesCache",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "RariFundManager.sol:386"
          },
          {
            "contract": "RariFundManager",
            "label": "_rawFundBalanceCache",
            "type": "t_int256",
            "src": "RariFundManager.sol:467"
          },
          {
            "contract": "RariFundManager",
            "label": "_acceptedCurrencies",
            "type": "t_mapping(t_string_memory,t_bool)",
            "src": "RariFundManager.sol:533"
          },
          {
            "contract": "RariFundManager",
            "label": "_netDeposits",
            "type": "t_int256",
            "src": "RariFundManager.sol:760"
          },
          {
            "contract": "RariFundManager",
            "label": "_interestFeeRate",
            "type": "t_uint256",
            "src": "RariFundManager.sol:781"
          },
          {
            "contract": "RariFundManager",
            "label": "_rawInterestAccruedAtLastFeeRateChange",
            "type": "t_int256",
            "src": "RariFundManager.sol:806"
          },
          {
            "contract": "RariFundManager",
            "label": "_interestFeesGeneratedAtLastFeeRateChange",
            "type": "t_int256",
            "src": "RariFundManager.sol:811"
          },
          {
            "contract": "RariFundManager",
            "label": "_interestFeesClaimed",
            "type": "t_uint256",
            "src": "RariFundManager.sol:827"
          },
          {
            "contract": "RariFundManager",
            "label": "_interestFeeMasterBeneficiary",
            "type": "t_address",
            "src": "RariFundManager.sol:841"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_contract(RariFundController)2089": {
            "label": "contract RariFundController"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(RariFundToken)7017": {
            "label": "contract RariFundToken"
          },
          "t_contract(RariFundPriceConsumer)4949": {
            "label": "contract RariFundPriceConsumer"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_string_memory,t_uint8)": {
            "label": "mapping(string => uint8)"
          },
          "t_mapping(t_string_memory,t_uint256)": {
            "label": "mapping(string => uint256)"
          },
          "t_mapping(t_string_memory,t_address)": {
            "label": "mapping(string => address)"
          },
          "t_mapping(t_string_memory,t_array(t_enum(LiquidityPool)116)dyn_storage)": {
            "label": "mapping(string => enum RariFundController.LiquidityPool[])"
          },
          "t_mapping(t_string_memory,t_mapping(t_uint8,t_uint256))": {
            "label": "mapping(string => mapping(uint8 => uint256))"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_string_memory,t_bool)": {
            "label": "mapping(string => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "966927621d3a446871376629e7e8455cfe9ac48a4dc8b65622bbb5eeab0caf7a": {
      "address": "0x17728F7dD30b6e87D597a54B3a6863CF4e96Aa4D",
      "txHash": "0xaa6bc81c8efaf7ccca18ddeaaeb6a20a8438598d9736341d9dac6b5bf2d67a30",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "ERC20",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:36"
          },
          {
            "contract": "ERC20",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:38"
          },
          {
            "contract": "ERC20",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:40"
          },
          {
            "contract": "ERC20",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol:233"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:10"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:11"
          },
          {
            "contract": "ERC20Detailed",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:12"
          },
          {
            "contract": "ERC20Detailed",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol:56"
          },
          {
            "contract": "MinterRole",
            "label": "_minters",
            "type": "t_struct(Role)12773_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol:14"
          },
          {
            "contract": "MinterRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol:49"
          },
          {
            "contract": "ERC20Mintable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Mintable.sol:30"
          },
          {
            "contract": "ERC20Burnable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Burnable.sol:30"
          },
          {
            "contract": "PauserRole",
            "label": "_pausers",
            "type": "t_struct(Role)12773_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol:14"
          },
          {
            "contract": "PauserRole",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol:49"
          },
          {
            "contract": "Pausable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol:28"
          },
          {
            "contract": "Pausable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol:79"
          },
          {
            "contract": "ERC20Pausable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Pausable.sol:40"
          },
          {
            "contract": "RariFundToken",
            "label": "rariGovernanceTokenDistributor",
            "type": "t_contract(IRariGovernanceTokenDistributor)7399",
            "src": "RariFundToken.sol:42"
          }
        ],
        "types": {
          "t_contract(IRariGovernanceTokenDistributor)7399": {
            "label": "contract IRariGovernanceTokenDistributor"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Role)12773_storage": {
            "label": "struct Roles.Role"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "5972194745a63353a462478e081a38066afc8c346b8bd858584306015721cb5c": {
      "address": "0xD7d2d97C61AfB3045039584Dc654B926694083C5",
      "txHash": "0xeb1314a90e90a48227227d287e4ca407be63651a5ed2e996c89710d00781161e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/upgrades/contracts/Initializable.sol:61"
          },
          {
            "contract": "RariFundPriceConsumer",
            "label": "_daiUsdPriceFeed",
            "type": "t_contract(AggregatorV3Interface)12074",
            "src": "RariFundPriceConsumer.sol:33"
          },
          {
            "contract": "RariFundPriceConsumer",
            "label": "_ethUsdPriceFeed",
            "type": "t_contract(AggregatorV3Interface)12074",
            "src": "RariFundPriceConsumer.sol:38"
          },
          {
            "contract": "RariFundPriceConsumer",
            "label": "_ethBasedPriceFeeds",
            "type": "t_mapping(t_string_memory,t_contract(AggregatorV3Interface)12074)",
            "src": "RariFundPriceConsumer.sol:43"
          }
        ],
        "types": {
          "t_contract(AggregatorV3Interface)12074": {
            "label": "contract AggregatorV3Interface"
          },
          "t_mapping(t_string_memory,t_contract(AggregatorV3Interface)12074)": {
            "label": "mapping(string => contract AggregatorV3Interface)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x038e3FB79BBE37C804F6d5EE6B5323537c886298",
    "txHash": "0xf5e13e6106c282ee25d3219ce276704bc0461f72b8ab49d18c1cd3853dd15bff"
  }
}
